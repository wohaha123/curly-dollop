# 函数内部更改全局变量
# 可以把函数内部的变量想成家里的厕所 只能自己上
# 把全局变量想成公共厕所

# 检验函数内部外部
a = 1
def abc():
    a = 2
    print(f"函数内部：{a}")
abc()
print(f"函数外部：{a}")      # ……………………相当于在函数中重新创建一个变量 a = 2

# 在变量名前加上global便可成为全局变量
d = 5
def de():
    global d
    d = 15
    print(f"函数内部：{d}")
de()
print(f"函数外部：{d}")      # ……………………声明变量后相当于直接用的是上面的那个全局变量 d = 5


# 为什么在函数中改成全局变量是危险动作呢？
# 出错的话增加除错难度
# 因为一间公共厕所越多人使用越容易坏掉 且找出谁把它弄坏的也很麻烦 因为使用公共厕所的人分太多了

# 不推荐这种修改成全局变量的写法
# 更好的建议：
# return回去
f = 8
def fg():
    print(f"函数内部：{f}")
    return 8989
f = fg()
print(f"函数外部：{f}")



